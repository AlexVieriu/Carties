72. Introduction to Section 7
73. Creating a docker account

74. Dockerizing the Auction Service
-- Dockerfile --
- - - - - - - - - - - - - - - - - - - - - - - - - - - 
FROM mcr.microsoft.com/dotnet/sdk:7.0-alpine as build
WORKDIR /app

# copy all .csproj files and restore as distinct layers. Use of same COPY command
# for every dockerfile in the project to take advantage of docker chaching

COPY Carsties.sln Carsties.sln
COPY src/AuctionService/AuctionService.csproj src/AuctionService/AuctionService.csproj
COPY src/Contracts/Contracts.csproj src/Contracts/Contracts.csproj
COPY src/GatewayService/GatewayService.csproj src/GatewayService/GatewayService.csproj
COPY src/IdentityService/IdentityService.csproj src/IdentityService/IdentityService.csproj
COPY src/SearchService/SearchService.csproj src/SearchService/SearchService.csproj

# Restore package deps
RUN dotnet restore Carsties.sln

# Copy the app folders over
COPY src/AuctionService src/AuctionService
COPY src/Contracts src/Contracts
WORKDIR /app/src/AuctionService
RUN dotnet publish -c Release -o /app/src/out

#build runtime image
FROM mcr.microsoft.com/dotnet/aspnet:7.0-alpine
WORKDIR /app
COPY --from=build /app/src/out ./
ENTRYPOINT ["dotnet", "AuctionService.dll"]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


docker build -f src/AuctionService/Dockerfile -t testing123 .


Dictionary:
build   -> set the base image to use for any subsequent instruction 
        that follow and also give this build stage a name
        -> docker can cash this image, so if we have similar image 
        like this (.net 7), dockerfile will use this image, so subsequent
        builds will be much faster

WORKDIR -> the absolute or relative path to use as the working directory
        -> will be created if it does not exist
        -> the the working directory for any ADD, COPY, CMD, ENTRYPOINT, 
        or RUN instruction tha follow  
        -> it is a directory inside Docker  


